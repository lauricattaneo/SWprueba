<?php

namespace Caja\SiafcaIntranetBundle\Repository;

use Caja\SiafcaIntranetBundle\Entity\UsuarioOrganismo;
use Caja\SiafcaIntranetBundle\Entity\Usuario;
use \DateTime;


/**
 * UsuarioOrganismoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsuarioOrganismoRepository extends \Doctrine\ORM\EntityRepository
{

    public function crearUsuarioOrganismo($organismoId, $usuarioNombre, $usuarioCorreo,$encoded,$salt)
    {

        $em = $this->getEntityManager();

        $organismo = $em->getRepository('SiafcaIntranetBundle:Organismo')->find($organismoId);
        $rol = $em->getRepository('SiafcaIntranetBundle:Rol')->find(5);
        $estado = $em->getRepository('SiafcaIntranetBundle:Estado')->find(30);


        $usuario = $em->getRepository('SiafcaIntranetBundle:Usuario')->loadUserByUsername($usuarioNombre);

        if (is_null($usuario)) {
            $usuario = new Usuario();
            $usuario->setUsername($usuarioNombre);
            $usuario->setEstado($estado);
            $usuario->setSalt($salt);
            $usuario->setPassword($encoded);
            $em->persist($usuario);
        }

        
        $usuarioOrganismo = new UsuarioOrganismo();

          $usuarioOrganismo->setCorreo($usuarioCorreo);

          $usuarioOrganismo->setEstado($estado);

          $usuarioOrganismo->setOrganismo($organismo);


          $usuarioOrganismo->setRol($rol);

          $usuarioOrganismo->setFechaDesde(new DateTime());
          $usuarioOrganismo->setFechaHasta(new DateTime());


          $usuarioOrganismo->setUsuario($usuario);




          $em->persist($usuarioOrganismo);

          $usuario->addUsuarioOrganismo($usuarioOrganismo);

          $em->persist($usuario);
          $em->flush();

          if($usuarioOrganismo->getId())
          return "true";
          else return "false";

                    return "xyz";
          /*
        /*

          $usuarioOrganismo = new UsuarioOrganismo();
          $usuarioOrganismo->setCorreo($usuarioCorreo);
          $usuarioOrganismo->setEstado($estado);
          $usuarioOrganismo->setOrganismo($organismo);
          $usuarioOrganismo->setRol($rol);
          $fechaActual = new DateTime("now");

          $usuarioOrganismo->setFechaDesde($fechaActual);
          $usuarioOrganismo->setFechaHasta($fechaActual);



          $usuario = $em->getRepository('SiafcaIntranetBundle:Usuario')->findOneBy(array('username' => $usuarioNombre));



          if($usuario){
          $usuarioOrganismo->setUsuario($usuario);
          $usuario->addUsuarioOrganismo($usuarioOrganismo);
          }else{
          $usuario = new Usuario();
          $usuario->setEstado($estado);
          $usuario->setUsername($usuarioNombre);
          $usuario->resetPassword();
          $usuario->setSalt(bin2hex(random_bytes(50)));
          $encoder = $this->container->get('security.password_encoder');
          $encoded = $encoder->encodePassword($usuario, $usuario->getPassword());
          $usuario->setPassword($encoded);
          }

          $usuario->addUsuarioOrganismo($usuarioOrganismo);


          $em->persist($usuario);
          $em->persist($usuarioOrganismo);
          $em->flush();


          if($usuarioOrganismo->getId())
          return true;
          else return false;
         */
    }
}
